syntax =  "proto3";

package com.improving.app.gateway.domain;

import "com/improving/app/common/domain/address.proto";
import "com/improving/app/common/domain/ids.proto";
import "google/protobuf/timestamp.proto";
import "scalapb/scalapb.proto";
import "scalapb/validate.proto";
import "validate/validate.proto";

option (scalapb.options) = {
  scope: FILE
  [scalapb.validate.file] {
    validate_at_construction: true
  }
  field_transformations: [
    {
      when: {options: {[validate.rules] {message: {required: true}}}}
        set: {
          [scalapb.field] {
            required: true
          }
        }
    }
  ]
};


//Data Model

enum NotificationPreference {
  option (scalapb.enum_options).extends = "com.improving.app.common.serialize.PBEnumSerializable";
  NOTIFICATION_PREFERENCE_EMAIL = 0;
  NOTIFICATION_PREFERENCE_SMS = 1;
  NOTIFICATION_PREFERENCE_APPLICATION = 2;
}

enum MemberStates {
  option (scalapb.enum_options).extends = "com.improving.app.common.serialize.PBEnumSerializable";
  MEMBER_STATES_DRAFT = 0;
  MEMBER_STATES_ACTIVE = 1;
  MEMBER_STATES_SUSPENDED = 2;
}

message MemberInfo {
  option (scalapb.message).extends = "com.improving.app.common.serialize.PBMsgSerializable";
    string handle = 1 [(validate.rules).string.min_len = 1];
    string avatar_url = 2 [(validate.rules).string.min_len = 1];
    string first_name = 3 [(validate.rules).string.min_len = 1];
    string last_name = 4 [(validate.rules).string.min_len = 1];
    optional NotificationPreference notification_preference = 5;
    bool notification_opt_in = 6;
    common.domain.Contact contact = 7 [(validate.rules).message.required = true];
    repeated common.domain.OrganizationId organization_membership = 8 [(validate.rules).repeated.min_items = 1];
    common.domain.TenantId tenant = 9 [(validate.rules).message.required = true];
}

message MemberMetaInfo {
  option (scalapb.message).extends = "com.improving.app.common.serialize.PBMsgSerializable";
  google.protobuf.Timestamp created_on = 1 [(validate.rules).message.required = true];
  common.domain.MemberId created_by = 2 [(validate.rules).message.required = true];
  google.protobuf.Timestamp last_modified_on = 3 [(validate.rules).message.required = true];
  common.domain.MemberId last_modified_by = 4 [(validate.rules).message.required = true];
  MemberStates current_state = 5;
}

//Requests
message RegisterMember {
  option (scalapb.message).extends = "com.improving.app.member.domain.Member.HasMemberId";
  common.domain.MemberId member_id = 1 [(validate.rules).message.required = true];
  MemberInfo member_info = 2 [(validate.rules).message.required = true];
  common.domain.MemberId registering_member = 3 [(validate.rules).message.required = true];
}

message MemberRequest{
  option (scalapb.message).sealed_oneof_extends = "com.improving.app.common.serialize.PBMsgOneOfSerializable";

  oneof sealed_value {
    RegisterMember register_member_value = 1;
  }
}

//Member Events
message MemberRegistered {
  common.domain.MemberId member_id = 1 [(validate.rules).message.required = true];
  MemberInfo member_info = 2 [(validate.rules).message.required = true];
  MemberMetaInfo meta = 3 [(validate.rules).message.required = true];
}

message MemberEvent{

  option (scalapb.message).sealed_oneof_extends = "com.improving.app.common.serialize.PBMsgOneOfSerializable";

  oneof sealed_value {
    MemberRegistered member_registered_value = 1;
  }
}

//MemberResponse
message MemberData {
  common.domain.MemberId member_id = 1 [(validate.rules).message.required = true];
  MemberInfo member_info = 2 [(validate.rules).message.required = true];
  MemberMetaInfo member_meta_info = 3 [(validate.rules).message.required = true];
}

message MemberEventResponse {
  MemberEvent member_event = 1 [(validate.rules).message.required = true];
}

message MemberResponse {
  oneof sealed_value {
    MemberData member_state_value = 1;
    MemberEventResponse member_event_value = 2;
  }
}
