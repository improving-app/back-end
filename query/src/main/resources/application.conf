app-version = "1.13-SNAPSHOT"

akka.http.server.preview.enable-http2 = on

akka {
  loglevel = INFO
  coordinated-shutdown.exit-jvm = on

  actor {
    allow-java-serialization = off
    provider = "cluster"
  }

  cluster {
    akka.cluster.app-version = ${app-version}
    shutdown-after-unsuccessful-join-seed-nodes = 60s
  }

  discovery {
    kubernetes-api {
      pod-namespace-path = "inventory-query"
      pod-namespace = "inventory-query"
      pod-label-selector = "app=inventory-query"
    }
  }

  management {
    cluster.bootstrap {
      contact-point-discovery {
        discovery-method = kubernetes-api
      }
    }
  }

  http {
    default-host-header = "inventory-query:80"
  }
}

akka.projection.slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    url = ${PROJECTION_JDBC_URL} #"jdbc:postgresql:///postgres?cloudSqlInstance=nike-pov:us-east4:nike1&socketFactory=com.google.cloud.sql.postgres.SocketFactory"
    user = ${PROJECTION_DB_USER} 
    password = ${PROJECTION_DB_PASSWORD} 
    driver = "org.postgresql.Driver"
  }
  offset-store {
    # set this to your database schema if applicable, empty by default
    schema = ""
    table = "akka_projection_offset_store"
    management-table = "akka_projection_management"
    use-lowercase-schema = true
  }
}
