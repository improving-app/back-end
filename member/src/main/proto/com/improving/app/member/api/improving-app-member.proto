syntax = "proto3";

package com.improving.app.member.api;

import "kalix/annotations.proto";
import "google/api/annotations.proto";
import "com/improving/app/organization/api/improving-app-organization.proto";


message MemberId {
  string memberId = 1 [(kalix.field).entity_key = true];
}

enum MemberType {
  Student = 0;
  FacutlyStaff = 1;
  Vendor = 2;
  Sponsor =3;
  General = 4;
  Alumni = 5;
  Parent = 6;
  Fan = 7;
}

enum NotificationPreference {
  Email = 0;
  SMS = 1;
}

enum MemberState {
  Active = 0;
  Inactive = 1;
  Suspended = 2;
  Terminated = 3;
}

message MemberInfo {
  string handle = 1;
  string avatarUrl = 2;
  string firstName = 3;
  string lastName = 4;
  optional string mobileNumber = 5;
  optional string email = 6;
  NotificationPreference notificationPreference = 7;
  bool optIn = 8;
  repeated com.improving.app.organization.api.OrganizationId organizations = 9;
  string relatedMembers = 10;
  MemberType memberType = 11;
}

message MemberToAdd {
  MemberId memberId = 1;
  MemberInfo memberInfo = 2;
}

message MemberMetaInfo {
  sint64 createdOn = 1;
  MemberId createdBy = 2;
  sint64 lastModifiedOn = 3;
  MemberId lastModifiedBy = 4;
  MemberState memberState = 5;
}

message RegisterMember {
 MemberToAdd memberToAdd = 1;
 MemberId registeringMember = 2;

}

message MemberRegistered {
  MemberId memberId = 1;
  MemberInfo memberInfo =2;
  MemberMetaInfo memberMetaInfo = 3;
}

message ActivateMember {
    MemberId memberId = 1;
    MemberId actingMember = 2;
}

message MemberActivated {
  MemberId memberId = 1;
  MemberMetaInfo memberMeta =2;
}

message InactivateMember {
  MemberId memberId = 1;
  MemberId actingMember = 2;
}

message MemberInactivated {
  MemberId memberId = 1;
  MemberMetaInfo memberMeta =2;
}

message SuspendMember {
  MemberId memberId = 1;
  MemberId actingMember = 2;
}

message MemberSuspended {
  MemberId memberId = 1;
  MemberMetaInfo memberMeta = 2;
}

message TerminateMember {
  MemberId memberId = 1;
  MemberId actingMember =2;
}

message MemberTerminated {
  MemberId memberId = 1;
  MemberMetaInfo memberMeta = 2;
}

message RetrieveMember {
  MemberId memberId = 1;
}

message MemberRetrieved {
  MemberId memberId = 1;
  MemberInfo memberInfo = 2;
  MemberMetaInfo memberMeta = 3;
}

// message UpdateMemberInfo {
//   MemberId memberId = 1;
//   MemberInfo memberInfo = 2;
// }

// message MemberInfoUpdated {
//   MemberId memberId = 1;
//   MemberInfo memberInfo = 2;
//   MemberMetaInfo memberMetaInfo = 3;
// }

service MemberService {
  option (kalix.codegen) = {
    event_sourced_entity: {
      name: "com.improving.app.member.domain.Member"
      entity_type: "member"
      state: "com.improving.app.member.domain.MemberState"
      events:[
        "com.improving.app.member.api.MemberRegistered","com.improving.app.member.api.MemberActivated","com.improving.app.member.api.MemberInactivated","com.improving.app.member.api.MemberSuspended", "com.improving.app.member.api.MemberTerminated"
      ]
    }
  };

  rpc registerMember (RegisterMember) returns (MemberRegistered) {
    option(google.api.http) = {
      post: "member/{memberId}/"
      body:"*"
    };
   }

  rpc activateMember(ActivateMember) returns (MemberActivated) {
    option(google.api.http) = {
      post: "member/{memberId}/activate/"
      body:"*"
    };
  }

  rpc inactivateMember(InactivateMember) returns (MemberInactivated) {
    option(google.api.http) = {
      post: "member/{memberId}/inactivate/"
      body:"*"
    };
  }

  rpc suspendMember(SuspendMember) returns (MemberSuspended) {
    option(google.api.http) = {
      post: "member/{memberId}/suspend/"
      body:"*"
    };
  }

  rpc terminateMember(TerminateMember) returns (MemberTerminated) {
    option(google.api.http) = {
      post: "member/{memberId}/terminate"
      body:"*"
    };
  }

  rpc retrieveMember(RetrieveMember) returns (MemberRetrieved) {
    option(google.api.http) = {
      post:"member/{memberId}/"
      body:"*"
    };
  }

  

}