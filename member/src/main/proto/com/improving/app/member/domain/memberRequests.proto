syntax =  "proto3";

package com.improving.app.member.domain;

import "com/improving/app/common/domain/ids.proto";
import "com/improving/app/member/domain/memberDomainObjects.proto";
import "scalapb/scalapb.proto";
import "validate/validate.proto";
import "scalapb/validate.proto";

option (scalapb.options) = {
  scope: FILE
  [scalapb.validate.file] {
    validate_at_construction: true
  }
  single_file: true,
  preamble: [
      "sealed trait MemberRequest {\n",
      "  val memberId: Option[com.improving.app.common.domain.MemberId]\n",
      "}\n",
      "sealed trait MemberCommand extends MemberRequest {",
      "  val onBehalfOf: Option[com.improving.app.common.domain.MemberId]\n",
      "}\n",
      "sealed trait MemberQuery extends MemberRequest\n"
  ]
};

message MemberRequestPB{
    option (scalapb.message).sealed_oneof_extends = "com.improving.app.common.serialize.PBMsgOneOfSerializable";

    oneof sealed_value {
        RegisterMember register_member_value = 1;
        ActivateMember activate_member_value = 2;
        SuspendMember suspend_member_value = 4;
        TerminateMember terminate_member_value = 5;
        EditMemberInfo edit_member_info_value = 6;
        GetMemberInfo get_member_info_value = 7;
    }
}

message RegisterMember {
    option (scalapb.message) = {
        extends: [ "MemberCommand" ]
    };
    option (scalapb.message).extends = "com.improving.app.member.domain.Member.HasMemberId";
    common.domain.MemberId member_id = 1;
    EditableInfo member_info = 2;
    common.domain.MemberId on_behalf_of = 3;
}

message ActivateMember {
    option (scalapb.message) = {
        extends: [ "MemberCommand" ]
    };
    option (scalapb.message).extends = "com.improving.app.member.domain.Member.HasMemberId";
    common.domain.MemberId member_id = 1;
    common.domain.MemberId on_behalf_of = 2;
}

message SuspendMember {
    option (scalapb.message) = {
        extends: [ "MemberCommand" ]
    };
    option (scalapb.message).extends = "com.improving.app.member.domain.Member.HasMemberId";
    common.domain.MemberId member_id = 1;
    common.domain.MemberId on_behalf_of = 2;
    string suspension_reason = 3 [(validate.rules).string.min_len = 1];
}

message TerminateMember {
    option (scalapb.message) = {
        extends: [ "MemberCommand" ]
    };
    option (scalapb.message).extends = "com.improving.app.member.domain.Member.HasMemberId";
    common.domain.MemberId member_id = 1;
    common.domain.MemberId on_behalf_of = 2;
}

message EditMemberInfo {
    option (scalapb.message) = {
        extends: [ "MemberCommand" ]
    };
    option (scalapb.message).extends = "com.improving.app.member.domain.Member.HasMemberId";
    common.domain.MemberId member_id = 1;
    EditableInfo member_info = 2;
    common.domain.MemberId on_behalf_of = 3;
}

message GetMemberInfo {
    option (scalapb.message) = {
        extends: [ "MemberQuery" ]
    };
    option (scalapb.message).extends = "com.improving.app.member.domain.Member.HasMemberId";
    common.domain.MemberId member_id = 1;
}
