syntax = "proto3";

package com.improving.app.organization.api;

import "com/improving/app/organization/domain/organizationRequest.proto";
import "com/improving/app/organization/domain/organizationDomainObjects.proto";
import "com/improving/app/organization/domain/organizationEvents.proto";
import "com/improving/app/common/domain/address.proto";

service OrganizationService {

  rpc EstablishOrganization (domain.EstablishOrganization) returns (domain.OrganizationEstablished) {}

  rpc ActivateOrganization (domain.ActivateOrganization) returns (domain.OrganizationActivated) {}

  rpc SuspendOrganization (domain.SuspendOrganization) returns (domain.OrganizationSuspended) {}

  rpc TerminateOrganization (domain.TerminateOrganization) returns (domain.OrganizationTerminated) {}

  rpc GetOrganizationInfo (domain.GetOrganizationInfo) returns (domain.OrganizationInfo) {}

  rpc AddMembersToOrganization (domain.AddMembersToOrganization) returns (domain.MembersAddedToOrganization) {}

  rpc RemoveMembersFromOrganization (domain.RemoveMembersFromOrganization) returns (domain.MembersRemovedFromOrganization) {}

  rpc AddOwnersToOrganization (domain.AddOwnersToOrganization) returns (domain.OwnersAddedToOrganization) {}

  rpc RemoveOwnersFromOrganization (domain.RemoveOwnersFromOrganization) returns (domain.OwnersRemovedFromOrganization) {}

  rpc UpdateOrganizationContacts (domain.UpdateOrganizationContacts) returns (domain.OrganizationContactsUpdated) {}

  rpc GetOrganizationContacts (domain.GetOrganizationContacts) returns (common.domain.ContactList) {}

}