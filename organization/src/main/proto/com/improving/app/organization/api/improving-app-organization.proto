// This is the public API offered by the shopping cart entity.

syntax = "proto3";

package com.improving.app.organization.api;

import "kalix/annotations.proto";
import "google/api/annotations.proto";
// import "google/protobuf/empty.proto";

message OrganizationId {
  string orgId = 1 [(kalix.field).entity_key = true];
}

message Address {
  // maybe put this in a "improving.app.api" package?
}

message OrganizationInfo {
  string name = 1; //i.e. Provo High School. Must be unique within the organizational structure.
  string shortName = 2; //i.e. PHS
  Address address = 3; //required for BaseOrg. Optional for all other organizations.
  bool isPrivate = 4; //defaults to true
  string url = 5;
  OrganizationId parentOrg =6; //BaseOrganizations do not have a parent. All other organizations must have a parent. The BaseOrganization (only one per organizational structure) is the financially responsible party.
}

message EstablishOrganization {
  OrganizationId orgId = 1;
  OrganizationInfo info = 2;
}

message OrganizationEstablished {
  OrganizationId orgId = 1;
  OrganizationInfo info = 2;
  sint64 timestamp = 3;
}

service OrganizationService {
  option (kalix.codegen) = {
    event_sourced_entity: {
      name: "com.improving.app.organization.domain.Organization"
      entity_type: "organization"
      state: "com.improving.app.organization.domain.OrgState"
      events: [
        "com.improving.app.organization.api.OrganizationEstablished"
      ]
    }
  };

  rpc establishOrganization (EstablishOrganization) returns (OrganizationEstablished) {
    option (google.api.http) = {
      post: "/org/{org_name}/"
      body: "*"
    };
  }

}