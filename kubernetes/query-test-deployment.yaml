apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: inventory-query
  name: inventory-query
---
apiVersion: v1
data:
  projection_jdbc_url: jdbc:postgresql://192.168.5.150:5432/gcp_ref
kind: ConfigMap
metadata:
  name: jdbc-info
  namespace: inventory-query
---
apiVersion: v1
data:
  password: Z2NwX3JlZl9wYXNzd29yZA==
  user: Z2NwX3JlZg==
kind: Secret
metadata:
  name: projection-db-credentials
  namespace: inventory-query
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-query-service
  namespace: inventory-query
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: inventory-query
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: inventory-query
  name: inventory-query
  namespace: inventory-query
spec:
  replicas: 2
  selector:
    matchLabels:
      app: inventory-query
  template:
    metadata:
      labels:
        app: inventory-query
    spec:
      containers:
      - env:
        - name: PROJECTION_JDBC_URL
          valueFrom:
            configMapKeyRef:
              key: projection_jdbc_url
              name: jdbc-info
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: REQUIRED_CONTACT_POINT_NR
          value: "2"
        - name: PROJECTION_DB_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: projection-db-credentials
        - name: PROJECTION_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: projection-db-credentials
        image: us-east4-docker.pkg.dev/reference-applications/inventory-demo/inventory-query:1.13-SNAPSHOT
        imagePullPolicy: Never
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /alive
            port: management
          initialDelaySeconds: 20
          periodSeconds: 10
        name: inventory-query
        ports:
        - containerPort: 8558
          name: management
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: management
          initialDelaySeconds: 10
          periodSeconds: 10
